apiVersion: kubeflow.org/v2beta1
kind: MPIJob
metadata:
  name: multi-node-nccom-test
spec:
  slotsPerWorker: {{.NeuronPerNode}}
  runPolicy:
    backoffLimit: 20
    cleanPodPolicy: Running
  mpiReplicaSpecs:
    Launcher:
      replicas: 1
      template:
        spec:
          restartPolicy: OnFailure
          containers:
          - image: {{.NeuronTestImage}}
            imagePullPolicy: Always
            name: nccom-test-launcher
            env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            command:
            - /bin/bash
            args:
            - -c
            - |
                WORKER_IPS=()
                for i in $(seq 0 $(({{.WorkerNodeCount}} - 1))); do
                  WORKER_IP=$(getent hosts multi-node-nccom-test-worker-$i.multi-node-nccom-test | awk '{print $1}')
                  WORKER_IPS+=("$WORKER_IP")
                done

                export CCOM_SOCKET_IFNAME=eth0
                export NEURON_RT_ROOT_COMM_ID=${WORKER_IPS[0]}:63182
                export OMPI_ALLOW_RUN_AS_ROOT=1
                export OMPI_ALLOW_RUN_AS_ROOT_CONFIRM=1

                nccom-test -r $(({{.NeuronCorePerNode}}*{{.WorkerNodeCount}})) -N {{.WorkerNodeCount}} -b "8" -e "2G" -f "2" -n "5" -w "5" -d "fp32" allr --hosts ${WORKER_IPS[*]} --data-collector-host $POD_IP --data-collector-port 60006 --debug
    Worker:
      replicas: {{.WorkerNodeCount}}
      template:
        spec:
          containers:
          - image: {{.NeuronTestImage}}
            name: nccom-test-worker
            imagePullPolicy: Always
            resources:
              limits:
                aws.amazon.com/neuron: {{.NeuronPerNode}}
                aws.amazon.com/neuroncore: {{.NeuronCorePerNode}}
                vpc.amazonaws.com/efa: {{.EfaInterfacePerNode}}
              requests:
                aws.amazon.com/neuron: {{.NeuronPerNode}}
                aws.amazon.com/neuroncore: {{.NeuronCorePerNode}}
                vpc.amazonaws.com/efa: {{.EfaInterfacePerNode}}
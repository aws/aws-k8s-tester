apiVersion: kubeflow.org/v2beta1
kind: MPIJob
metadata:
  name: neuron-training
spec:
  # Each Worker has "1 slot," because we want 1 rank per Worker Pod.
  slotsPerWorker: 1
  runPolicy:
    backoffLimit: 20
    cleanPodPolicy: Running
  mpiReplicaSpecs:
    Launcher:
      replicas: 1
      template:
        spec:
          restartPolicy: OnFailure
          containers:
            - name: neuron-bert-training
              image: 632572741643.dkr.ecr.us-east-1.amazonaws.com/aws-k8s-tester/neuron-training:latest
              imagePullPolicy: Always
              env:
                # Example environment variables
                - name: NCCL_DEBUG
                  value: "TRACE"
                - name: MASTER_ADDR
                  value: "neuron-training"
                - name: MASTER_PORT
                  value: "12355"
              command:
                - /bin/sh
              args:
                - -c
                - |
                  echo "Launcher: whoami => $(whoami)"
                  echo "Launcher: Starting SSH..."
                  echo password | sudo -S service ssh start

                  echo "Launcher: Running mpirun..."
                  # Use 1 rank per node => total ranks = # of Worker Pods (2).
                  /opt/amazon/openmpi/bin/mpirun --tag-output \
                    -np 2 \
                    -bind-to none \
                    -map-by slot \
                    -x PATH \
                    -x LD_LIBRARY_PATH \
                    -x NCCL_DEBUG \
                    -x MASTER_ADDR \
                    -x MASTER_PORT \
                    --mca pml cm \
                    --mca routed direct \
                    --oversubscribe \
                    --mca orte_base_help_aggregate 0 \
                    python /home/ubuntu/train.py
    Worker:
      # Replicas = number of nodes. Here we assume 2 nodes in your cluster.
      replicas: 2
      template:
        spec:
          # This ensures we land on the trn1.32xlarge nodes
          nodeSelector:
            node.kubernetes.io/instance-type: trn1.32xlarge
          volumes:
            - name: dshm
              emptyDir:
                medium: Memory
          containers:
            - name: neuron-bert-training-worker
              image: 632572741643.dkr.ecr.us-east-1.amazonaws.com/aws-k8s-tester/neuron-training:latest
              imagePullPolicy: Always
              volumeMounts:
                - mountPath: /dev/shm
                  name: dshm
              command:
                - /bin/sh
              args:
                - -c
                - |
                  echo "Worker: whoami => $(whoami)"
                  echo "Worker: Starting SSH..."
                  echo password | sudo -S service ssh start
                  # Worker container simply sleeps so that mpirun can SSH in
                  while true; do
                    sleep 30
                  done
              # Request all 32 NeuronCores on each node
              resources:
                requests:
                  aws.amazon.com/neuroncore: 32
                  vpc.amazonaws.com/efa: 8
                limits:
                  aws.amazon.com/neuroncore: 32
                  vpc.amazonaws.com/efa: 8

# This is a golang template to work around limitations of CloudFormation built-ins, which are used whenever possible.
---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'kubetest2-eksapi unmanaged nodegroup'

Parameters:
  ResourceId:
    Description: Unique identifier for this kubetest2-eksapi execution.
    Type: String

  VpcId:
    Type: AWS::EC2::VPC::Id

  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id

  AMIId:
    Type: String
    Description: Specify AMI id for the node instances.

  NodeDiskSize:
    Type: Number
    Description: Node disk size in gigabytes.
    Default: 20

  NodeCount:
    Type: Number

  ClusterName:
    Type: String

  NodeRoleName:
    Description: The IAM role name  of worker nodes.
    Type: String

  SSHKeyPair:
    Type: String

  SSHSecurityGroup:
    Type: String

  UserData:
    Type: String

Resources:
  NodeInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - !Ref NodeRoleName

  NodeGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    UpdatePolicy:
      AutoScalingRollingUpdate:
        WaitOnResourceSignals: true
        PauseTime: PT15M
    Properties:
      AutoScalingGroupName: !Ref ResourceId
      DesiredCapacity: !Ref NodeCount
      MinSize: !Ref NodeCount
      MaxSize: !Ref NodeCount
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandAllocationStrategy: prioritized
          OnDemandBaseCapacity: !Ref NodeCount
          OnDemandPercentageAboveBaseCapacity: 0
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref NodeLaunchTemplate
            # LaunchTemplateName: String
            Version: !GetAtt NodeLaunchTemplate.LatestVersionNumber
          Overrides:
            {{- range .InstanceTypes}}
            - InstanceType: "{{.}}"
            {{- end}}
      VPCZoneIdentifier:
        !Ref SubnetIds
      Tags:
        # necessary for kubelet's legacy, in-tree cloud provider
        - Key: !Sub kubernetes.io/cluster/${ClusterName}
          Value: owned
          PropagateAtLaunch: true

  NodeLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Ref ResourceId
      LaunchTemplateData:
        SecurityGroupIds:
          - !Ref SecurityGroup
          - !Ref SSHSecurityGroup
        KeyName: !Ref SSHKeyPair
        UserData:
          Fn::Base64:
            Fn::Sub: |
              Content-Type: multipart/mixed; boundary="BOUNDARY"
              MIME-Version: 1.0

              --BOUNDARY
              ${UserData}

              --BOUNDARY
              Content-Type: text/x-shellscript; charset="us-ascii"
              MIME-Version: 1.0

              #!/usr/bin/env bash
              /opt/aws/bin/cfn-signal \
                --stack  ${AWS::StackName} \
                --resource NodeGroup \
                --region ${AWS::Region}

              --BOUNDARY--
        IamInstanceProfile:
          Arn: !GetAtt NodeInstanceProfile.Arn
        ImageId: !Ref AMIId
        InstanceType: "{{index .InstanceTypes 0}}"
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              VolumeSize: !Ref NodeDiskSize
              VolumeType: gp2
              DeleteOnTermination: true
